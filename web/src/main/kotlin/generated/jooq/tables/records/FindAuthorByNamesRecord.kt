/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records


import generated.jooq.tables.FindAuthorByNames
import generated.jooq.tables.interfaces.IFindAuthorByNames

import javax.annotation.processing.Generated

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.16",
        "schema version:0"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class FindAuthorByNamesRecord() : TableRecordImpl<FindAuthorByNamesRecord>(FindAuthorByNames.FIND_AUTHOR_BY_NAMES), IFindAuthorByNames {

    open override var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IFindAuthorByNames) {
        this.id = from.id
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised FindAuthorByNamesRecord
     */
    constructor(id: Long? = null): this() {
        this.id = id
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised FindAuthorByNamesRecord
     */
    constructor(value: generated.jooq.tables.pojos.FindAuthorByNames?): this() {
        if (value != null) {
            this.id = value.id
            resetChangedOnNotNull()
        }
    }
}
