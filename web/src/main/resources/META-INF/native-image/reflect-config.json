[
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.kotlin.KotlinModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.BookRepo",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "save",
        "parameterTypes": [
          "java.util.List",
          "kotlin.coroutines.Continuation"
        ]
      },
      {
        "name": "save$suspendImpl",
        "parameterTypes": [
          "com.github.asm0dey.opdsko_spring.BookRepo",
          "java.util.List",
          "kotlin.coroutines.Continuation"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "generated.jooq.tables.daos.BookDao"
        ]
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.BookRepo$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.BookRepo$$SpringCGLIB$$1",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.BookService",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.Config",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "router",
        "parameterTypes": [
          "com.github.asm0dey.opdsko_spring.HtmxHandler",
          "com.github.asm0dey.opdsko_spring.Scanner"
        ]
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.Config$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.Config$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.Config$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.HtmxHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.github.asm0dey.opdsko_spring.BookRepo",
          "com.github.asm0dey.opdsko_spring.BookService"
        ]
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.OpdskoSpringApplication",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.OpdskoSpringApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.OpdskoSpringApplicationKt"
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.OpdskoSpringApplicationKt__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "com.github.asm0dey.opdsko_spring.OpdskoSpringApplicationKt"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.Scanner",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.github.asm0dey.opdsko_spring.ScannerSettings",
          "com.github.asm0dey.opdsko_spring.BookRepo",
          "com.github.asm0dey.opdsko_spring.BookService"
        ]
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.ScannerSettings",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSources",
        "parameterTypes": []
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.io.File[]"
        ]
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.ScannerSettings$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.SpringConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "bookHandlers",
        "parameterTypes": []
      },
      {
        "name": "delegates",
        "parameterTypes": []
      },
      {
        "name": "pluginManager",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.SpringConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.SpringConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.asm0dey.opdsko_spring.SpringConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "methods": [
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getHikariConfigMXBean",
        "parameterTypes": []
      },
      {
        "name": "getHikariPoolMXBean",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.AbstractSpringDAOImpl",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "fetch",
        "parameterTypes": [
          "org.jooq.Field",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "fetch",
        "parameterTypes": [
          "org.jooq.Field",
          "java.util.Collection"
        ]
      },
      {
        "name": "fetchOne",
        "parameterTypes": [
          "org.jooq.Field",
          "java.lang.Object"
        ]
      },
      {
        "name": "fetchOptional",
        "parameterTypes": [
          "org.jooq.Field",
          "java.lang.Object"
        ]
      },
      {
        "name": "fetchRange",
        "parameterTypes": [
          "org.jooq.Field",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOptionalById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.DefaultCatalog",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPUBLIC",
        "parameterTypes": []
      },
      {
        "name": "getSchemas",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.DefaultCatalog$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDEFAULT_CATALOG",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.indexes.IndexesKt",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getIDX_BOOK_NAME_TRGM",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.keys.KeysKt",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAUTHOR_FULL_NAME_KEY",
        "parameterTypes": []
      },
      {
        "name": "getAUTHOR_PKEY",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_AUTHOR__BOOK_AUTHOR_AUTHOR_ID_FKEY",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_AUTHOR__BOOK_AUTHOR_BOOK_ID_FKEY",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_AUTHOR_PKEY",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_GENRE__BOOK_GENRE_BOOK_ID_FKEY",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_GENRE__BOOK_GENRE_GENRE_ID_FKEY",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_GENRE_PKEY",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_PKEY",
        "parameterTypes": []
      },
      {
        "name": "getGENRE_NAME_KEY",
        "parameterTypes": []
      },
      {
        "name": "getGENRE_PKEY",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.Public",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAUTHOR",
        "parameterTypes": []
      },
      {
        "name": "getBOOK",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_AUTHOR",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_GENRE",
        "parameterTypes": []
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getFIND_AUTHOR_BY_NAMES",
        "parameterTypes": []
      },
      {
        "name": "getGENRE",
        "parameterTypes": []
      },
      {
        "name": "getTables",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.Public$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPUBLIC",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GinExtractQueryTrgm$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "get_3",
        "parameterTypes": []
      },
      {
        "name": "get_4",
        "parameterTypes": []
      },
      {
        "name": "get_5",
        "parameterTypes": []
      },
      {
        "name": "get_6",
        "parameterTypes": []
      },
      {
        "name": "get_7",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GinExtractValueTrgm$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GinTrgmConsistent$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "get_3",
        "parameterTypes": []
      },
      {
        "name": "get_4",
        "parameterTypes": []
      },
      {
        "name": "get_5",
        "parameterTypes": []
      },
      {
        "name": "get_6",
        "parameterTypes": []
      },
      {
        "name": "get_7",
        "parameterTypes": []
      },
      {
        "name": "get_8",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GinTrgmTriconsistent$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "get_3",
        "parameterTypes": []
      },
      {
        "name": "get_4",
        "parameterTypes": []
      },
      {
        "name": "get_5",
        "parameterTypes": []
      },
      {
        "name": "get_6",
        "parameterTypes": []
      },
      {
        "name": "get_7",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmCompress$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmConsistent$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "get_3",
        "parameterTypes": []
      },
      {
        "name": "get_4",
        "parameterTypes": []
      },
      {
        "name": "get_5",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmDecompress$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmDistance$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "get_3",
        "parameterTypes": []
      },
      {
        "name": "get_4",
        "parameterTypes": []
      },
      {
        "name": "get_5",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmIn$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmOptions$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmOut$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmPenalty$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "get_3",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmPicksplit$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmSame$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "get_3",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.GtrgmUnion$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.references.RoutinesKt",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setLimit",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "org.jooq.Field"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.routines.SetLimit$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.ShowLimit$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.ShowTrgm$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.Similarity$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.SimilarityDist$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.SimilarityOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.StrictWordSimilarity$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.StrictWordSimilarityCommutatorOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.StrictWordSimilarityDistCommutatorOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.StrictWordSimilarityDistOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.StrictWordSimilarityOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.WordSimilarity$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.WordSimilarityCommutatorOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.WordSimilarityDistCommutatorOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.WordSimilarityDistOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.routines.WordSimilarityOp$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get_1",
        "parameterTypes": []
      },
      {
        "name": "get_2",
        "parameterTypes": []
      },
      {
        "name": "getRETURN_VALUE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.Author",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getADDED",
        "parameterTypes": []
      },
      {
        "name": "getBook",
        "parameterTypes": []
      },
      {
        "name": "getBookAuthor",
        "parameterTypes": []
      },
      {
        "name": "getFB2ID",
        "parameterTypes": []
      },
      {
        "name": "getFIRST_NAME",
        "parameterTypes": []
      },
      {
        "name": "getFULL_NAME",
        "parameterTypes": []
      },
      {
        "name": "getID",
        "parameterTypes": []
      },
      {
        "name": "getIdentity",
        "parameterTypes": []
      },
      {
        "name": "getLAST_NAME",
        "parameterTypes": []
      },
      {
        "name": "getMIDDLE_NAME",
        "parameterTypes": []
      },
      {
        "name": "getNICKNAME",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.Author$AuthorPath",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.Author$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAUTHOR",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.Book",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getADDED",
        "parameterTypes": []
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getBookAuthor",
        "parameterTypes": []
      },
      {
        "name": "getBookGenre",
        "parameterTypes": []
      },
      {
        "name": "getDATE",
        "parameterTypes": []
      },
      {
        "name": "getGenre",
        "parameterTypes": []
      },
      {
        "name": "getID",
        "parameterTypes": []
      },
      {
        "name": "getIdentity",
        "parameterTypes": []
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getLANG",
        "parameterTypes": []
      },
      {
        "name": "getNAME",
        "parameterTypes": []
      },
      {
        "name": "getPATH",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSEQUENCE",
        "parameterTypes": []
      },
      {
        "name": "getSEQUENCE_NUMBER",
        "parameterTypes": []
      },
      {
        "name": "getZIP_FILE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.Book$BookPath",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.Book$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBOOK",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.BookAuthor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getAUTHOR_ID",
        "parameterTypes": []
      },
      {
        "name": "getBook",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_ID",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      },
      {
        "name": "getReferences",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.BookAuthor$BookAuthorPath",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.BookAuthor$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBOOK_AUTHOR",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.BookGenre",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBook",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_ID",
        "parameterTypes": []
      },
      {
        "name": "getGenre",
        "parameterTypes": []
      },
      {
        "name": "getGENRE_ID",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      },
      {
        "name": "getReferences",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.BookGenre$BookGenrePath",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.BookGenre$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBOOK_GENRE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.daos.AuthorDao",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.daos.AuthorDao$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.AuthorDao$$SpringCGLIB$$1",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.BookAuthorDao",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.daos.BookAuthorDao$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.BookAuthorDao$$SpringCGLIB$$1",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.BookDao",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.daos.BookDao$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.BookDao$$SpringCGLIB$$1",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.BookGenreDao",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.daos.BookGenreDao$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.BookGenreDao$$SpringCGLIB$$1",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.GenreDao",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.daos.GenreDao$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.daos.GenreDao$$SpringCGLIB$$1",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.FindAuthorByNames",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getID",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.FindAuthorByNames$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getFIND_AUTHOR_BY_NAMES",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.Genre",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBook",
        "parameterTypes": []
      },
      {
        "name": "getBookGenre",
        "parameterTypes": []
      },
      {
        "name": "getID",
        "parameterTypes": []
      },
      {
        "name": "getIdentity",
        "parameterTypes": []
      },
      {
        "name": "getNAME",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.Genre$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getGENRE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.Genre$GenrePath",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "generated.jooq.tables.interfaces.IAuthor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdded",
        "parameterTypes": []
      },
      {
        "name": "getFb2id",
        "parameterTypes": []
      },
      {
        "name": "getFirstName",
        "parameterTypes": []
      },
      {
        "name": "getFullName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLastName",
        "parameterTypes": []
      },
      {
        "name": "getMiddleName",
        "parameterTypes": []
      },
      {
        "name": "getNickname",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.interfaces.IBook",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdded",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLang",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getSequence",
        "parameterTypes": []
      },
      {
        "name": "getSequenceNumber",
        "parameterTypes": []
      },
      {
        "name": "getZipFile",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.interfaces.IBookAuthor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAuthorId",
        "parameterTypes": []
      },
      {
        "name": "getBookId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.interfaces.IBookGenre",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBookId",
        "parameterTypes": []
      },
      {
        "name": "getGenreId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.interfaces.IFindAuthorByNames",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.interfaces.IGenre",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.pojos.Author",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": []
      },
      {
        "name": "component2",
        "parameterTypes": []
      },
      {
        "name": "component3",
        "parameterTypes": []
      },
      {
        "name": "component4",
        "parameterTypes": []
      },
      {
        "name": "component5",
        "parameterTypes": []
      },
      {
        "name": "component6",
        "parameterTypes": []
      },
      {
        "name": "component7",
        "parameterTypes": []
      },
      {
        "name": "component8",
        "parameterTypes": []
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.time.OffsetDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "generated.jooq.tables.pojos.Author",
          "java.lang.Long",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.time.OffsetDateTime",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAdded",
        "parameterTypes": []
      },
      {
        "name": "getFb2id",
        "parameterTypes": []
      },
      {
        "name": "getFirstName",
        "parameterTypes": []
      },
      {
        "name": "getFullName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLastName",
        "parameterTypes": []
      },
      {
        "name": "getMiddleName",
        "parameterTypes": []
      },
      {
        "name": "getNickname",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.pojos.Book",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": []
      },
      {
        "name": "component2",
        "parameterTypes": []
      },
      {
        "name": "component3",
        "parameterTypes": []
      },
      {
        "name": "component4",
        "parameterTypes": []
      },
      {
        "name": "component5",
        "parameterTypes": []
      },
      {
        "name": "component6",
        "parameterTypes": []
      },
      {
        "name": "component7",
        "parameterTypes": []
      },
      {
        "name": "component8",
        "parameterTypes": []
      },
      {
        "name": "component9",
        "parameterTypes": []
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.time.OffsetDateTime",
          "java.lang.String",
          "java.lang.Long",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "generated.jooq.tables.pojos.Book",
          "java.lang.Long",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.time.OffsetDateTime",
          "java.lang.String",
          "java.lang.Long",
          "java.lang.String",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAdded",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLang",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getSequence",
        "parameterTypes": []
      },
      {
        "name": "getSequenceNumber",
        "parameterTypes": []
      },
      {
        "name": "getZipFile",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.pojos.BookAuthor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": []
      },
      {
        "name": "component2",
        "parameterTypes": []
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "generated.jooq.tables.pojos.BookAuthor",
          "java.lang.Long",
          "java.lang.Long",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAuthorId",
        "parameterTypes": []
      },
      {
        "name": "getBookId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.pojos.BookGenre",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": []
      },
      {
        "name": "component2",
        "parameterTypes": []
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "generated.jooq.tables.pojos.BookGenre",
          "java.lang.Long",
          "java.lang.Long",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getBookId",
        "parameterTypes": []
      },
      {
        "name": "getGenreId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.pojos.FindAuthorByNames",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": []
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "generated.jooq.tables.pojos.FindAuthorByNames",
          "java.lang.Long",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.pojos.Genre",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": []
      },
      {
        "name": "component2",
        "parameterTypes": []
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "generated.jooq.tables.pojos.Genre",
          "java.lang.Long",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "generated.jooq.tables.records.AuthorRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdded",
        "parameterTypes": []
      },
      {
        "name": "getFb2id",
        "parameterTypes": []
      },
      {
        "name": "getFirstName",
        "parameterTypes": []
      },
      {
        "name": "getFullName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLastName",
        "parameterTypes": []
      },
      {
        "name": "getMiddleName",
        "parameterTypes": []
      },
      {
        "name": "getNickname",
        "parameterTypes": []
      },
      {
        "name": "setAdded",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setFb2id",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLastName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMiddleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickname",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.tables.records.BookAuthorRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAuthorId",
        "parameterTypes": []
      },
      {
        "name": "getBookId",
        "parameterTypes": []
      },
      {
        "name": "setAuthorId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setBookId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.tables.records.BookGenreRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBookId",
        "parameterTypes": []
      },
      {
        "name": "getGenreId",
        "parameterTypes": []
      },
      {
        "name": "setBookId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setGenreId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.tables.records.BookRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdded",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLang",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getSequence",
        "parameterTypes": []
      },
      {
        "name": "getSequenceNumber",
        "parameterTypes": []
      },
      {
        "name": "getZipFile",
        "parameterTypes": []
      },
      {
        "name": "setAdded",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLang",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSequenceNumber",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setZipFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.tables.records.FindAuthorByNamesRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.tables.records.GenreRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "generated.jooq.tables.references.TablesKt",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAUTHOR",
        "parameterTypes": []
      },
      {
        "name": "getBOOK",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_AUTHOR",
        "parameterTypes": []
      },
      {
        "name": "getBOOK_GENRE",
        "parameterTypes": []
      },
      {
        "name": "getFIND_AUTHOR_BY_NAMES",
        "parameterTypes": []
      },
      {
        "name": "getGENRE",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.MeterBinder",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.observation.MeterObservationHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.observation.KeyValuesConvention",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationConvention",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationPredicate",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.validation.Validator",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Closeable",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Boolean"
  },
  {
    "name": "java.lang.Class"
  },
  {
    "name": "java.lang.Double"
  },
  {
    "name": "java.lang.Enum",
    "methods": [
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Float"
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "name": "java.lang.Iterable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Long"
  },
  {
    "name": "java.lang.Number"
  },
  {
    "name": "java.lang.Short"
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.net.http.HttpClient",
    "condition": {
      "typeReachable": "java.net.http.HttpClient"
    }
  },
  {
    "name": "java.net.URI",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "toLocalDate",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ]
  },
  {
    "name": "java.sql.SQLData",
    "methods": [
      {
        "name": "getSQLTypeName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.time.OffsetDateTime"
  },
  {
    "name": "java.util.Collection",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.EventListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.function.BiPredicate",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.List",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.SequencedCollection",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "javax.inject.Inject"
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.flywaydb.core.extensibility.ConfigurationExtension",
    "methods": [
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "isStub",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.flywaydb.core.extensibility.ConfigurationParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isRequired",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.flywaydb.core.extensibility.Plugin",
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPluginVersion",
        "parameterTypes": [
          "org.flywaydb.core.api.configuration.Configuration"
        ]
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "isLicensed",
        "parameterTypes": [
          "org.flywaydb.core.api.configuration.Configuration"
        ]
      }
    ]
  },
  {
    "name": "org.flywaydb.core.Flyway",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flywaydb.core.internal.configuration.extensions.DeployScriptFilenameConfigurationExtension",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getConfigurationParameters",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getScriptFilename",
        "parameterTypes": []
      },
      {
        "name": "setScriptFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.flywaydb.core.internal.configuration.extensions.PrepareScriptFilenameConfigurationExtension",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getConfigurationParameters",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getScriptFilename",
        "parameterTypes": []
      },
      {
        "name": "setScriptFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.flywaydb.core.internal.publishing.OperationResultPublisher",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flywaydb.core.internal.publishing.PublishingConfigurationExtension",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "isCheckDriftOnMigrate",
        "parameterTypes": []
      },
      {
        "name": "isPublishResult",
        "parameterTypes": []
      },
      {
        "name": "setCheckDriftOnMigrate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishResult",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.jooq.Binding",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "set",
        "parameterTypes": [
          "org.jooq.BindingSetSQLOutputContext"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "org.jooq.BindingSetStatementContext"
        ]
      }
    ]
  },
  {
    "name": "org.jooq.BindingSetSQLOutputContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.BindingSetStatementContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.Catalog",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSchemas",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Check",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Comment",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Condition",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.Configuration",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jooq.ConnectionProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jooq.ContextConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.DAO",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.jooq.DataType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getArrayBaseDataType",
        "parameterTypes": []
      },
      {
        "name": "getArrayBaseType",
        "parameterTypes": []
      },
      {
        "name": "getArrayComponentDataType",
        "parameterTypes": []
      },
      {
        "name": "getArrayComponentType",
        "parameterTypes": []
      },
      {
        "name": "getArrayDataType",
        "parameterTypes": []
      },
      {
        "name": "getArrayType",
        "parameterTypes": []
      },
      {
        "name": "getBinding",
        "parameterTypes": []
      },
      {
        "name": "getCastTypeName",
        "parameterTypes": []
      },
      {
        "name": "getConverter",
        "parameterTypes": []
      },
      {
        "name": "getDialect",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getSQLDataType",
        "parameterTypes": []
      },
      {
        "name": "getSQLType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getTypeName",
        "parameterTypes": []
      },
      {
        "name": "isArray",
        "parameterTypes": []
      },
      {
        "name": "isAssociativeArray",
        "parameterTypes": []
      },
      {
        "name": "isBinary",
        "parameterTypes": []
      },
      {
        "name": "isBoolean",
        "parameterTypes": []
      },
      {
        "name": "isDate",
        "parameterTypes": []
      },
      {
        "name": "isDateTime",
        "parameterTypes": []
      },
      {
        "name": "isDecimal",
        "parameterTypes": []
      },
      {
        "name": "isEmbeddable",
        "parameterTypes": []
      },
      {
        "name": "isEnum",
        "parameterTypes": []
      },
      {
        "name": "isFloat",
        "parameterTypes": []
      },
      {
        "name": "isInteger",
        "parameterTypes": []
      },
      {
        "name": "isInterval",
        "parameterTypes": []
      },
      {
        "name": "isJSON",
        "parameterTypes": []
      },
      {
        "name": "isLob",
        "parameterTypes": []
      },
      {
        "name": "isMultiset",
        "parameterTypes": []
      },
      {
        "name": "isNString",
        "parameterTypes": []
      },
      {
        "name": "isNumeric",
        "parameterTypes": []
      },
      {
        "name": "isOther",
        "parameterTypes": []
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      },
      {
        "name": "isSpatial",
        "parameterTypes": []
      },
      {
        "name": "isString",
        "parameterTypes": []
      },
      {
        "name": "isTemporal",
        "parameterTypes": []
      },
      {
        "name": "isTime",
        "parameterTypes": []
      },
      {
        "name": "isTimestamp",
        "parameterTypes": []
      },
      {
        "name": "isTimestampWithTimeZone",
        "parameterTypes": []
      },
      {
        "name": "isTimeWithTimeZone",
        "parameterTypes": []
      },
      {
        "name": "isUDT",
        "parameterTypes": []
      },
      {
        "name": "isUUID",
        "parameterTypes": []
      },
      {
        "name": "isXML",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Domain",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getChecks",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.DSLContext",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jooq.ExecuteListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jooq.ExecuteListenerProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jooq.Field",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.ForeignKey",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInverseKey",
        "parameterTypes": []
      },
      {
        "name": "getKey",
        "parameterTypes": []
      },
      {
        "name": "getKeyFields",
        "parameterTypes": []
      },
      {
        "name": "getKeyFieldsArray",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Identity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getField",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.impl.AbstractFormattable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.impl.AbstractNamed",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getCommentPart",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getQualifiedName",
        "parameterTypes": []
      },
      {
        "name": "getUnqualifiedName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.impl.AbstractQualifiedRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getQualifier",
        "parameterTypes": []
      },
      {
        "name": "getSQLTypeName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.impl.AbstractQueryPart",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.impl.AbstractRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.impl.AbstractStore",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.impl.AbstractTable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBinding",
        "parameterTypes": []
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getChecks",
        "parameterTypes": []
      },
      {
        "name": "getConverter",
        "parameterTypes": []
      },
      {
        "name": "getDataType",
        "parameterTypes": []
      },
      {
        "name": "getIdentity",
        "parameterTypes": []
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getKeys",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getPackage",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getRecordTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getRecordVersion",
        "parameterTypes": []
      },
      {
        "name": "getReferences",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getTableType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.impl.CatalogImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getQualifiedName",
        "parameterTypes": []
      },
      {
        "name": "getSchemas",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.impl.DataSourceConnectionProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.jooq.impl.DefaultConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.jooq.impl.DefaultDSLContext",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.jooq.impl.DefaultExecuteListenerProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.jooq.impl.SchemaImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDomains",
        "parameterTypes": []
      },
      {
        "name": "getForeignKeys",
        "parameterTypes": []
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKeys",
        "parameterTypes": []
      },
      {
        "name": "getQualifiedName",
        "parameterTypes": []
      },
      {
        "name": "getSequences",
        "parameterTypes": []
      },
      {
        "name": "getTables",
        "parameterTypes": []
      },
      {
        "name": "getUDTs",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.impl.TableImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getChecks",
        "parameterTypes": []
      },
      {
        "name": "getIdentity",
        "parameterTypes": []
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getKeys",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getQualifiedName",
        "parameterTypes": []
      },
      {
        "name": "getRecordTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      },
      {
        "name": "getRecordVersion",
        "parameterTypes": []
      },
      {
        "name": "getReferences",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.impl.TableRecordImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.impl.UpdatableRecordImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.Index",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "getUnique",
        "parameterTypes": []
      },
      {
        "name": "getWhere",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.InverseForeignKey",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getForeignKey",
        "parameterTypes": []
      },
      {
        "name": "getForeignKeyFields",
        "parameterTypes": []
      },
      {
        "name": "getForeignKeyFieldsArray",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Key",
    "methods": [
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getFieldsArray",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Name",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Named",
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getCommentPart",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getQualifiedName",
        "parameterTypes": []
      },
      {
        "name": "getUnqualifiedName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Package",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.Parameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getParamMode",
        "parameterTypes": []
      },
      {
        "name": "isDefaulted",
        "parameterTypes": []
      },
      {
        "name": "isUnnamed",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.ParamMode",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.jooq.Qualified",
    "methods": [
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.QualifiedRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getQualifier",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Record",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.RecordQualifier",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDataType",
        "parameterTypes": []
      },
      {
        "name": "getPackage",
        "parameterTypes": []
      },
      {
        "name": "getRecordType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Row",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.Schema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDomains",
        "parameterTypes": []
      },
      {
        "name": "getForeignKeys",
        "parameterTypes": []
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKeys",
        "parameterTypes": []
      },
      {
        "name": "getSequences",
        "parameterTypes": []
      },
      {
        "name": "getTables",
        "parameterTypes": []
      },
      {
        "name": "getUDTs",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Scope",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jooq.Sequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getCycle",
        "parameterTypes": []
      },
      {
        "name": "getIncrementBy",
        "parameterTypes": []
      },
      {
        "name": "getMaxvalue",
        "parameterTypes": []
      },
      {
        "name": "getMinvalue",
        "parameterTypes": []
      },
      {
        "name": "getStartWith",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.SortField",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.SortOrder",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.jooq.SQLDialect",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNameLC",
        "parameterTypes": []
      },
      {
        "name": "getNameUC",
        "parameterTypes": []
      },
      {
        "name": "isFamily",
        "parameterTypes": []
      },
      {
        "name": "isVersioned",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.Table",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getChecks",
        "parameterTypes": []
      },
      {
        "name": "getIdentity",
        "parameterTypes": []
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getKeys",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getRecordTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getRecordVersion",
        "parameterTypes": []
      },
      {
        "name": "getReferences",
        "parameterTypes": []
      },
      {
        "name": "getTableType",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.TableField",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.TableField[]"
  },
  {
    "name": "org.jooq.TableOptions",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.jooq.TableOptions$TableType",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "isFunction",
        "parameterTypes": []
      },
      {
        "name": "isTable",
        "parameterTypes": []
      },
      {
        "name": "isView",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.TableRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.TransactionProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jooq.Typed",
    "methods": [
      {
        "name": "getBinding",
        "parameterTypes": []
      },
      {
        "name": "getConverter",
        "parameterTypes": []
      },
      {
        "name": "getDataType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.UDT",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isSQLUsable",
        "parameterTypes": []
      },
      {
        "name": "isSynthetic",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.UDTRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getUDT",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.UniqueKey",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getReferences",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jooq.UpdatableRecord",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.pf4j.PluginManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.pf4j.spring.SpringPluginManager",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.postgresql.ds.PGSimpleDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryEndpointExposureOutcomeContributor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.EndpointExposureOutcomeContributor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointCachingOperationInvokerAdvisor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "endpointOperationParameterMapper",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "propertiesEndpointAccessResolver",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointObjectMapper",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.PropertiesEndpointAccessResolver",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAllowCredentials",
        "parameterTypes": []
      },
      {
        "name": "getAllowedHeaders",
        "parameterTypes": []
      },
      {
        "name": "getAllowedMethods",
        "parameterTypes": []
      },
      {
        "name": "getAllowedOriginPatterns",
        "parameterTypes": []
      },
      {
        "name": "getAllowedOrigins",
        "parameterTypes": []
      },
      {
        "name": "getExposedHeaders",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "setAllowCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowedMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowedOriginPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowedOrigins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExposedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "controllerEndpointHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
        ]
      },
      {
        "name": "serverCodecConfigurerEndpointObjectMapperBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webEndpointReactiveHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "controllerEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "controllerExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      },
      {
        "name": "endpointMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "pathMappedEndpoints",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "webAccessPropertiesOperationFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
        ]
      },
      {
        "name": "webEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webEndpointPathMapper",
        "parameterTypes": []
      },
      {
        "name": "webExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBasePath",
        "parameterTypes": []
      },
      {
        "name": "getDiscovery",
        "parameterTypes": []
      },
      {
        "name": "getExposure",
        "parameterTypes": []
      },
      {
        "name": "getPathMapping",
        "parameterTypes": []
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getExclude",
        "parameterTypes": []
      },
      {
        "name": "getInclude",
        "parameterTypes": []
      },
      {
        "name": "setExclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "pingHealthContributor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthContributorRegistry",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "healthEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroupMembershipValidator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
          "org.springframework.boot.actuate.health.HealthContributorRegistry"
        ]
      },
      {
        "name": "healthEndpointGroups",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroupsBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "healthHttpCodeStatusMapper",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthStatusAggregator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalPath",
        "parameterTypes": []
      },
      {
        "name": "getExclude",
        "parameterTypes": []
      },
      {
        "name": "getInclude",
        "parameterTypes": []
      },
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "setAdditionalPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSlowIndicatorThreshold",
        "parameterTypes": []
      },
      {
        "name": "setSlowIndicatorThreshold",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveHealthEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthEndpointWebFluxHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getShowComponents",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getHttpMapping",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.NoSuchHealthContributorFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveHealthContributorRegistry",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getGit",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "dbHealthContributor",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreRoutingDataSources",
        "parameterTypes": []
      },
      {
        "name": "setIgnoreRoutingDataSources",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPercentiles",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "isPercentilesHistogram",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPercentiles",
        "parameterTypes": [
          "double[]"
        ]
      },
      {
        "name": "setPercentilesHistogram",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "simpleConfig",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
        ]
      },
      {
        "name": "simpleMeterRegistry",
        "parameterTypes": [
          "io.micrometer.core.instrument.simple.SimpleConfig",
          "io.micrometer.core.instrument.Clock"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "getStep",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "io.micrometer.core.instrument.simple.CountingMode"
        ]
      },
      {
        "name": "setStep",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourcePoolMetadataMeterBinder",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariDataSourceMeterBinder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "classLoaderMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmCompilationMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmGcMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmHeapPressureMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmInfoMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmMemoryMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmThreadMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "logbackMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "meterRegistryCloser",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "meterRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "micrometerClock",
        "parameterTypes": []
      },
      {
        "name": "propertiesMeterFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getDistribution",
        "parameterTypes": []
      },
      {
        "name": "getEnable",
        "parameterTypes": []
      },
      {
        "name": "getSystem",
        "parameterTypes": []
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "getWeb",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalRegistry",
        "parameterTypes": []
      },
      {
        "name": "setUseGlobalRegistry",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRepository",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAutotime",
        "parameterTypes": []
      },
      {
        "name": "getMetricName",
        "parameterTypes": []
      },
      {
        "name": "setMetricName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBufferLength",
        "parameterTypes": []
      },
      {
        "name": "getExpiry",
        "parameterTypes": []
      },
      {
        "name": "getMaximumExpectedValue",
        "parameterTypes": []
      },
      {
        "name": "getMinimumExpectedValue",
        "parameterTypes": []
      },
      {
        "name": "getPercentiles",
        "parameterTypes": []
      },
      {
        "name": "getPercentilesHistogram",
        "parameterTypes": []
      },
      {
        "name": "getSlo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDiskspace",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System$Diskspace",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPaths",
        "parameterTypes": []
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getClient",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMaxUriTags",
        "parameterTypes": []
      },
      {
        "name": "setMaxUriTags",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMaxUriTags",
        "parameterTypes": []
      },
      {
        "name": "setMaxUriTags",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MeterValue"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "startupTimeMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceMetrics",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "fileDescriptorMetrics",
        "parameterTypes": []
      },
      {
        "name": "processorMetrics",
        "parameterTypes": []
      },
      {
        "name": "uptimeMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "bindTaskExecutorsToRegistry",
        "parameterTypes": [
          "java.util.Map",
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "eagerTaskExecutorMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observationRegistry",
        "parameterTypes": []
      },
      {
        "name": "observationRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "propertiesObservationFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultMeterObservationHandler",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsObservationHandlerGrouping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEnable",
        "parameterTypes": []
      },
      {
        "name": "getHttp",
        "parameterTypes": []
      },
      {
        "name": "getKeyValues",
        "parameterTypes": []
      },
      {
        "name": "getLongTaskTimer",
        "parameterTypes": []
      },
      {
        "name": "setEnable",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setKeyValues",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getClient",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRequests",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client$ClientRequests",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRequests",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server$ServerRequests",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpClientUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observationWebClientCustomizer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      },
      {
        "name": "defaultServerRequestObservationConvention",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpServerUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observabilitySchedulingConfigurer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "sslHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.info.SslInfo"
        ]
      },
      {
        "name": "sslInfo",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles",
          "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCertificateValidityWarningThreshold",
        "parameterTypes": []
      },
      {
        "name": "setCertificateValidityWarningThreshold",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getThreshold",
        "parameterTypes": []
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryEventPublisherBeansApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveWebChildContextFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getBasePath",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointAccessResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.OperationFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.AdditionalPathsMapper",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.Link",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHref",
        "parameterTypes": []
      },
      {
        "name": "isTemplated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AdditionalHealthEndpointPathsWebFluxHandlerMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
    "methods": [
      {
        "name": "links",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.ContributorRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.Health",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthComponent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      },
      {
        "name": "healthForPath",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthIndicator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.NamedContributors",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext"
        ]
      },
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Status",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SystemHealth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getGroups",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.ssl.SslHealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSources",
        "parameterTypes": []
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": []
      },
      {
        "name": "isAllowBeanDefinitionOverriding",
        "parameterTypes": []
      },
      {
        "name": "isAllowCircularReferences",
        "parameterTypes": []
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "isLazyInitialization",
        "parameterTypes": []
      },
      {
        "name": "isLogStartupInfo",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShutdownHook",
        "parameterTypes": []
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "forceAutoProxyCreatorToUseClassProxying",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMaxInMemorySize",
        "parameterTypes": []
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": []
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": []
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "flywayDefaultDdlModeProvider",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "stringOrNumberMigrationVersionConverter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
        ]
      },
      {
        "name": "flyway",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer"
        ]
      },
      {
        "name": "flywayConnectionDetails",
        "parameterTypes": []
      },
      {
        "name": "flywayInitializer",
        "parameterTypes": [
          "org.flywaydb.core.Flyway",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "postgresqlFlywayConfigurationCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$PostgresqlFlywayConfigurationCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$PropertiesFlywayConnectionDetails",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayConfigurationCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBaselineDescription",
        "parameterTypes": []
      },
      {
        "name": "getBaselineVersion",
        "parameterTypes": []
      },
      {
        "name": "getBatch",
        "parameterTypes": []
      },
      {
        "name": "getCommunityDbSupportEnabled",
        "parameterTypes": []
      },
      {
        "name": "getConnectRetries",
        "parameterTypes": []
      },
      {
        "name": "getConnectRetriesInterval",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSchema",
        "parameterTypes": []
      },
      {
        "name": "getDetectEncoding",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getDryRunOutput",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getErrorOverrides",
        "parameterTypes": []
      },
      {
        "name": "getIgnoreMigrationPatterns",
        "parameterTypes": []
      },
      {
        "name": "getInitSqls",
        "parameterTypes": []
      },
      {
        "name": "getInstalledBy",
        "parameterTypes": []
      },
      {
        "name": "getJdbcProperties",
        "parameterTypes": []
      },
      {
        "name": "getKerberosConfigFile",
        "parameterTypes": []
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getLockRetryCount",
        "parameterTypes": []
      },
      {
        "name": "getLoggers",
        "parameterTypes": []
      },
      {
        "name": "getOracle",
        "parameterTypes": []
      },
      {
        "name": "getOracleKerberosCacheFile",
        "parameterTypes": []
      },
      {
        "name": "getOracleSqlplus",
        "parameterTypes": []
      },
      {
        "name": "getOracleSqlplusWarn",
        "parameterTypes": []
      },
      {
        "name": "getOracleWalletLocation",
        "parameterTypes": []
      },
      {
        "name": "getOutputQueryResults",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholderPrefix",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholders",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholderSeparator",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholderSuffix",
        "parameterTypes": []
      },
      {
        "name": "getPostgresql",
        "parameterTypes": []
      },
      {
        "name": "getRepeatableSqlMigrationPrefix",
        "parameterTypes": []
      },
      {
        "name": "getSchemas",
        "parameterTypes": []
      },
      {
        "name": "getScriptPlaceholderPrefix",
        "parameterTypes": []
      },
      {
        "name": "getScriptPlaceholderSuffix",
        "parameterTypes": []
      },
      {
        "name": "getSkipExecutingMigrations",
        "parameterTypes": []
      },
      {
        "name": "getSqlMigrationPrefix",
        "parameterTypes": []
      },
      {
        "name": "getSqlMigrationSeparator",
        "parameterTypes": []
      },
      {
        "name": "getSqlMigrationSuffixes",
        "parameterTypes": []
      },
      {
        "name": "getSqlserver",
        "parameterTypes": []
      },
      {
        "name": "getSqlServerKerberosLoginFile",
        "parameterTypes": []
      },
      {
        "name": "getStream",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "getTablespace",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "isBaselineOnMigrate",
        "parameterTypes": []
      },
      {
        "name": "isCleanDisabled",
        "parameterTypes": []
      },
      {
        "name": "isCleanOnValidationError",
        "parameterTypes": []
      },
      {
        "name": "isCreateSchemas",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "isExecuteInTransaction",
        "parameterTypes": []
      },
      {
        "name": "isFailOnMissingLocations",
        "parameterTypes": []
      },
      {
        "name": "isGroup",
        "parameterTypes": []
      },
      {
        "name": "isMixed",
        "parameterTypes": []
      },
      {
        "name": "isOutOfOrder",
        "parameterTypes": []
      },
      {
        "name": "isPlaceholderReplacement",
        "parameterTypes": []
      },
      {
        "name": "isSkipDefaultCallbacks",
        "parameterTypes": []
      },
      {
        "name": "isSkipDefaultResolvers",
        "parameterTypes": []
      },
      {
        "name": "isValidateMigrationNaming",
        "parameterTypes": []
      },
      {
        "name": "isValidateOnMigrate",
        "parameterTypes": []
      },
      {
        "name": "setBaselineDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBaselineOnMigrate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBaselineVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBatch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCleanDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCleanOnValidationError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCommunityDbSupportEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setConnectRetries",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConnectRetriesInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setCreateSchemas",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDetectEncoding",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDryRunOutput",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setErrorOverrides",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setExecuteInTransaction",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFailOnMissingLocations",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnoreMigrationPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInitSqls",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInstalledBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setKerberosConfigFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLockRetryCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLoggers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMixed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOracleKerberosCacheFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOracleSqlplus",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOracleSqlplusWarn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOracleWalletLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOutOfOrder",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOutputQueryResults",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlaceholderPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlaceholderReplacement",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPlaceholders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPlaceholderSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlaceholderSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepeatableSqlMigrationPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemas",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScriptPlaceholderPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScriptPlaceholderSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSkipDefaultCallbacks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSkipDefaultResolvers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSkipExecutingMigrations",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSqlMigrationPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlMigrationSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlMigrationSuffixes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqlServerKerberosLoginFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStream",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTablespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidateMigrationNaming",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setValidateOnMigrate",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties$Oracle",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getKerberosCacheFile",
        "parameterTypes": []
      },
      {
        "name": "getSqlplus",
        "parameterTypes": []
      },
      {
        "name": "getSqlplusWarn",
        "parameterTypes": []
      },
      {
        "name": "getWalletLocation",
        "parameterTypes": []
      },
      {
        "name": "setKerberosCacheFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlplus",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSqlplusWarn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setWalletLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties$Postgresql",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getTransactionalLock",
        "parameterTypes": []
      },
      {
        "name": "setTransactionalLock",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties$Sqlserver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getKerberosLoginFile",
        "parameterTypes": []
      },
      {
        "name": "setKerberosLoginFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultCodecCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.codec.CodecProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonCodecCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBuild",
        "parameterTypes": []
      },
      {
        "name": "getGit",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": []
      },
      {
        "name": "getDatatype",
        "parameterTypes": []
      },
      {
        "name": "getDateFormat",
        "parameterTypes": []
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": []
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": []
      },
      {
        "name": "getDeserialization",
        "parameterTypes": []
      },
      {
        "name": "getGenerator",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getMapper",
        "parameterTypes": []
      },
      {
        "name": "getParser",
        "parameterTypes": []
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "getSerialization",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getVisibility",
        "parameterTypes": []
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEnum",
        "parameterTypes": []
      },
      {
        "name": "getJsonNode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
          "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
        ]
      },
      {
        "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getEmbeddedDatabaseConnection",
        "parameterTypes": []
      },
      {
        "name": "getJndiName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getXa",
        "parameterTypes": []
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbeddedDatabaseConnection",
        "parameterTypes": [
          "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXa",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcClient",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getTemplate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getFetchSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxRows",
        "parameterTypes": []
      },
      {
        "name": "getQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxRows",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.ExceptionTranslatorExecuteListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourceConnectionProvider",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "dslContext",
        "parameterTypes": [
          "org.jooq.Configuration"
        ]
      },
      {
        "name": "jooqConfiguration",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jooq.JooqProperties",
          "org.jooq.ConnectionProvider",
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jooqExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "jooqExceptionTranslatorExecuteListenerProvider",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jooq.ExceptionTranslatorExecuteListener"
        ]
      },
      {
        "name": "transactionProvider",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.JooqProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSqlDialect",
        "parameterTypes": []
      },
      {
        "name": "setSqlDialect",
        "parameterTypes": [
          "org.jooq.SQLDialect"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.SpringTransactionProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetection",
        "parameterTypes": []
      },
      {
        "name": "setLeakDetection",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactorResourceFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getShutdownQuietPeriod",
        "parameterTypes": []
      },
      {
        "name": "setShutdownQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getContextPropagation",
        "parameterTypes": []
      },
      {
        "name": "setContextPropagation",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDataLocations",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPlatform",
        "parameterTypes": []
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": []
      },
      {
        "name": "getSeparator",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": []
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.BundleContentNotWatchableFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getKeystore",
        "parameterTypes": []
      },
      {
        "name": "getTruststore",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getProvider",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getKeystore",
        "parameterTypes": []
      },
      {
        "name": "getTruststore",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCertificate",
        "parameterTypes": []
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": []
      },
      {
        "name": "getPrivateKeyPassword",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isVerifyKeys",
        "parameterTypes": []
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifyKeys",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "fileWatcher",
        "parameterTypes": []
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.FileWatcher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties",
    "methods": [
      {
        "name": "getKey",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getProtocol",
        "parameterTypes": []
      },
      {
        "name": "isReloadOnUpdate",
        "parameterTypes": []
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReloadOnUpdate",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Key",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCiphers",
        "parameterTypes": []
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": []
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBundle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getJks",
        "parameterTypes": []
      },
      {
        "name": "getPem",
        "parameterTypes": []
      },
      {
        "name": "getWatch",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getFile",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getQuietPeriod",
        "parameterTypes": []
      },
      {
        "name": "setQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPool",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSimple",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCoreSize",
        "parameterTypes": []
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": []
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isAcceptTasksAfterContextClose",
        "parameterTypes": []
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": []
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": []
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": []
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskExecutorBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "threadPoolTaskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskSchedulerBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "threadPoolTaskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPool",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSimple",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": []
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": []
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": []
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionExecutionListeners",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": []
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": []
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": []
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": []
      },
      {
        "name": "getIncludePath",
        "parameterTypes": []
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": []
      },
      {
        "name": "isIncludeException",
        "parameterTypes": []
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludePath",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": []
      },
      {
        "name": "errorWebExceptionHandler",
        "parameterTypes": [
          "org.springframework.boot.web.reactive.error.ErrorAttributes",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webClientHttpConnector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
        ]
      },
      {
        "name": "webClientHttpConnectorCustomizer",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ClientHttpConnector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactorClientHttpConnectorFactory",
        "parameterTypes": [
          "org.springframework.http.client.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ReactorClientHttpConnectorFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webClientBuilder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webClientSsl",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "exchangeStrategiesCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "httpHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultPartHttpMessageReaderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getFileStorageDirectory",
        "parameterTypes": []
      },
      {
        "name": "getHeadersCharset",
        "parameterTypes": []
      },
      {
        "name": "getMaxDiskUsagePerPart",
        "parameterTypes": []
      },
      {
        "name": "getMaxHeadersSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxInMemorySize",
        "parameterTypes": []
      },
      {
        "name": "getMaxParts",
        "parameterTypes": []
      },
      {
        "name": "setFileStorageDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeadersCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setMaxDiskUsagePerPart",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHeadersSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxParts",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyReactiveWebServerFactory",
        "parameterTypes": [
          "org.springframework.http.client.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "localeContextResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxConversionService",
        "parameterTypes": []
      },
      {
        "name": "webFluxValidator",
        "parameterTypes": []
      },
      {
        "name": "webSessionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "welcomePageRouterFunctionMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBasePath",
        "parameterTypes": []
      },
      {
        "name": "getFormat",
        "parameterTypes": []
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": []
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": []
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": []
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getDateTime",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
        ]
      },
      {
        "name": "webSessionIdResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getJetty",
        "parameterTypes": []
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": []
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": []
      },
      {
        "name": "getNetty",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getReactive",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getTomcat",
        "parameterTypes": []
      },
      {
        "name": "getUndertow",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAccesslog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": []
      },
      {
        "name": "getMaxFormKeys",
        "parameterTypes": []
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": []
      },
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxFormKeys",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": []
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": []
      },
      {
        "name": "getFilename",
        "parameterTypes": []
      },
      {
        "name": "getFormat",
        "parameterTypes": []
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": []
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": []
      },
      {
        "name": "isAppend",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAcceptors",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getSelectors",
        "parameterTypes": []
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": []
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": []
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": []
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCookie",
        "parameterTypes": []
      },
      {
        "name": "getMaxSessions",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "setMaxSessions",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getContextParameters",
        "parameterTypes": []
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": []
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": []
      },
      {
        "name": "getAccesslog",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": []
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": []
      },
      {
        "name": "getBasedir",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": []
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": []
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": []
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": []
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": []
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": []
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": []
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": []
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": []
      },
      {
        "name": "getRemoteip",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": []
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": []
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConditionIf",
        "parameterTypes": []
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": []
      },
      {
        "name": "getDirectory",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getMaxDays",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getSuffix",
        "parameterTypes": []
      },
      {
        "name": "isBuffered",
        "parameterTypes": []
      },
      {
        "name": "isCheckExists",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": []
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": []
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": []
      },
      {
        "name": "isRotate",
        "parameterTypes": []
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getHostHeader",
        "parameterTypes": []
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": []
      },
      {
        "name": "getPortHeader",
        "parameterTypes": []
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": []
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": []
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": []
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": []
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": []
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": []
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": []
      },
      {
        "name": "getMinSpare",
        "parameterTypes": []
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAccesslog",
        "parameterTypes": []
      },
      {
        "name": "getBufferSize",
        "parameterTypes": []
      },
      {
        "name": "getDecodeSlash",
        "parameterTypes": []
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": []
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": []
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": []
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": []
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": []
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": []
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": []
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": []
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setDecodeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDir",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getSuffix",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "isRotate",
        "parameterTypes": []
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "getSocket",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getIo",
        "parameterTypes": []
      },
      {
        "name": "getWorker",
        "parameterTypes": []
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getChain",
        "parameterTypes": []
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": []
      },
      {
        "name": "isAddMappings",
        "parameterTypes": []
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": []
      },
      {
        "name": "getPeriod",
        "parameterTypes": []
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": []
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": []
      },
      {
        "name": "getCachePublic",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": []
      },
      {
        "name": "getNoCache",
        "parameterTypes": []
      },
      {
        "name": "getNoStore",
        "parameterTypes": []
      },
      {
        "name": "getNoTransform",
        "parameterTypes": []
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": []
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": []
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": []
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEnabled",
        "parameterTypes": []
      },
      {
        "name": "getStrategy",
        "parameterTypes": []
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "isCompressed",
        "parameterTypes": []
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getFixed",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPaths",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPaths",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.AotInitializerNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.info.SslInfo",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.io.Base64ProtocolResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SchemaManagementProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ApplicationNameConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.CorrelationIdConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.codec.CodecCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorAttributes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEnabled",
        "parameterTypes": []
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": []
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": []
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPartitioned",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getSameSite",
        "parameterTypes": []
      },
      {
        "name": "getSecure",
        "parameterTypes": []
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPartitioned",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBundle",
        "parameterTypes": []
      },
      {
        "name": "getCertificate",
        "parameterTypes": []
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": []
      },
      {
        "name": "getCiphers",
        "parameterTypes": []
      },
      {
        "name": "getClientAuth",
        "parameterTypes": []
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": []
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": []
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": []
      },
      {
        "name": "getKeyStore",
        "parameterTypes": []
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": []
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": []
      },
      {
        "name": "getProtocol",
        "parameterTypes": []
      },
      {
        "name": "getServerNameBundles",
        "parameterTypes": []
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": []
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": []
      },
      {
        "name": "getTrustStore",
        "parameterTypes": []
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": []
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setServerNameBundles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCharset",
        "parameterTypes": []
      },
      {
        "name": "getMapping",
        "parameterTypes": []
      },
      {
        "name": "isForce",
        "parameterTypes": []
      },
      {
        "name": "isForceRequest",
        "parameterTypes": []
      },
      {
        "name": "isForceResponse",
        "parameterTypes": []
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "getRegistered",
        "parameterTypes": []
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCookie",
        "parameterTypes": []
      },
      {
        "name": "getSessionStoreDirectory",
        "parameterTypes": []
      },
      {
        "name": "getStoreDir",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "isPersistent",
        "parameterTypes": []
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.GenericConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.ProtocolResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.io.ResourceEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ReactiveAdapterRegistry",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.http.client.JdkClientHttpRequestFactory",
    "methods": [
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.reactive.ClientHttpConnector",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.ReactorClientHttpRequestFactory",
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.ReactorResourceFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.codec.ServerCodecConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.ProblemDetailJacksonMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getReasonPhrase",
        "parameterTypes": []
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": []
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": []
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": []
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": []
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": []
      },
      {
        "name": "isError",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaTypeEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.ProblemDetail",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetail",
        "parameterTypes": []
      },
      {
        "name": "getInstance",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.server.reactive.observation.DefaultServerRequestObservationConvention",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.server.reactive.observation.ServerRequestObservationConvention",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.DataSourceTransactionManager",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.jmx.export.MBeanExporter",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": []
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.Isolation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.ConfigurableTransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.util.MimeType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCharset",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      },
      {
        "name": "getSubtype",
        "parameterTypes": []
      },
      {
        "name": "getSubtypeSuffix",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isConcrete",
        "parameterTypes": []
      },
      {
        "name": "isWildcardSubtype",
        "parameterTypes": []
      },
      {
        "name": "isWildcardType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.cors.CorsConfiguration",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.web.cors.reactive.PreFlightRequestHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
    "queriedMethods": [
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "responseBodyResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseEntityResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseStatusExceptionHandler",
        "parameterTypes": []
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "serverCodecConfigurer",
        "parameterTypes": []
      },
      {
        "name": "serverResponseResultHandler",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "simpleHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "viewResolutionResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "webFluxAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "webFluxContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxWebSocketHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "webHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.DispatchExceptionHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient$Builder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.function.server.RouterFunction",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerAdapter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerResultHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.resource.ResourceWebHandler",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.server.i18n.LocaleContextResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionIdResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.WebExceptionHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.WebHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  },
  {
    "name": "reactor.core.publisher.Mono",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "reactor.netty.http.client.HttpClient",
    "condition": {
      "typeReachable": "reactor.netty.http.client.HttpClient"
    }
  }
]
